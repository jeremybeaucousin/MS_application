package Model;

import java.net.URL;
import java.net.URI;
import java.net.MalformedURLException;
import java.net.URISyntaxException;
import java.util.Iterator;
import java.io.IOException;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.InputStreamReader;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.json.JSONTokener;


public class TheMovieDB {
	private static String api_key = "api_key=1acc7c1593ee8145d2d390f1d419a573";
	
	public static void getMovie() {
		String MovieName = "&query=batman";
        String urlTheMovieDb = "http://api.themoviedb.org/3/search/movie";
        
        // Step 2: encodage les caractères spéciaux 
        // avec gestion des URISyntaxException, 
        try {
            URI uri = new URI(null, null, urlTheMovieDb, api_key + MovieName, null);
            // Etape 3: transformation en un url 
            // avec gestion des URISyntaxException
            try {
                URL urlTheMovieDbSearching = uri.toURL();
                        
                try{           	
                	JSONTokener tokener = new JSONTokener(urlTheMovieDbSearching.openStream());
                	JSONObject root = new JSONObject(tokener);
  
                	JSONArray keySet = root.names();
                	
                	for(int ii=0; ii < keySet.length(); ii++) {
                		System.out.println(keySet.getString(ii) + " " + root.get(keySet.getString(ii)));

                		if(root.get(keySet.getString(ii)) instanceof JSONArray) {
                			JSONArray tempTable = (JSONArray) root.get(keySet.getString(ii));
	                		for(int jj=0; jj < tempTable.length(); jj++) {
	                			JSONObject tempJSON = (JSONObject) tempTable.get(jj);
	                			JSONArray keySetTempJSON = tempJSON.names();
	                			
	                			for(int kk = 0; kk < keySetTempJSON.length(); kk++) {
	                				System.out.println(keySetTempJSON.get(kk) + " " + tempJSON.get((String) keySetTempJSON.get(kk)));
	                			}
	                		}
                		}
                	}
                	
                	/*JSONArray results = (JSONArray) root.get("results");
                	System.out.println(results.get(2));*/

                	for(int ii = 0; ii < root.length(); ii++) {
                		//System.out.println(root.get(iterator.t));
                	}
                	
                }
                catch(IOException e){
                    System.out.println(e);
                } catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            } 
            catch (MalformedURLException e) {
                System.out.println(e);
            }
        } 
        catch (URISyntaxException e) {
            System.out.println(e);
        }
	}
	
	public static void buildURL() {
		
	}
}
